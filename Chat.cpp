#include "Chat.h"
#include <iostream>

//–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è - –ø—Ä–∏–Ω–∏–º–∞–µ–º –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å, –æ—Ç–æ–±—Ä–æ–∂–∞–µ–º–æ–µ –∏–º—è.
void Chat::registerUser(const std::string& login, const std::string& pass, const std::string& name) {
    for (auto& u : users) {
        if (u.getLogin() == login) {
            throw UserAlreadyExists(login);
        }
    }
    users.emplace_back(login, pass, name);
}

//–≤—Ö–æ–¥, –ø–æ –ø–∞—Ä–æ–ª—é –∏ –ª–æ–≥–∏–Ω—É.
bool Chat::loginUser(const std::string& login, const std::string& pass) {
    for (auto& u : users) {
        if (u.getLogin() == login) {
            if (u.checkPassword(pass)) {
                return true;
            }
            else {
                throw WrongPassword(login);
            }
        }
    }
    throw UserNotFound(login);
}

//–ø–æ–ª—É—á–∞–µ–º –æ—Ç–æ–±—Ä–æ–∂–∞–µ–º–æ–µ –∏–º—è –ø–æ –ª–æ–≥–∏–Ω—É
std::string Chat::getNameByLogin(const std::string& login) const {
    for (auto& u : users) {
        if (u.getLogin() == login) {
            return u.getName();
        }
    }
    return "";
}

//–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è - –æ—Ç –∫–æ–≥–æ, –∫–æ–º—É, —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
void Chat::sendMessage(const std::string& fromName, const std::string& toName, const std::string& text) {
    messages.emplace_back(fromName, toName, text);
}

//–æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
void Chat::showMessagesFor(const std::string& name) const {
    cout << "üì© –°–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è " << name << ":\n";
    for (auto& m : messages) {
        if (m.getReceiver() == name || m.getReceiver() == "all") {
            string target = (m.getReceiver() == "all") ? "–≤—Å–µ—Ö" : m.getReceiver();
            cout << "[–û—Ç " << m.getSender() << " –¥–ª—è " << target << "]: "
                << m.getText() << endl;
        }
    }
    cout << "--------------------------\n";
}
